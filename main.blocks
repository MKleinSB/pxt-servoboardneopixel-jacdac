<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="Z8KvgE)iRAYN5V?OM!E]" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="RJF1x]G:7D]m4E1s87gl"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace modules {" line1="    /**" line2="     * Calliope mini Neopixelstreifen an Servoboard C8" line3="     */" line4="    //% fixedInstance whenUsed block=&quot;Calliope Neopixelstrip C8&quot;" line5="    //% block.loc.de=&quot;Calliope Neopixelstreifen&quot;" line6="    export const CallipeNeopixelStrip1 = new LedClient(&quot;Calliope Neopixelstrip C8?dev=self&amp;num_pixels=12&amp;variant=Strip&quot;)" line7="" line8="    /**" line9="    * Custom color picker" line10="    */" line11="    //% blockId=CalliColorNumberPicker block=&quot;%value&quot;" line12="    //% blockHidden=true" line13="    //% group=&quot;LED Strip&quot;" line14="    //% value.fieldEditor=&quot;colornumber&quot; value.fieldOptions.decompileLiterals=true" line15="    //% value.fieldOptions.colours='[&quot;#ffffff&quot;,&quot;#ff0000&quot;,&quot;#ff7f00&quot;,&quot;#fffe00&quot;,&quot;#7fff00&quot;,&quot;#00ff00&quot;,&quot;#00ff7f&quot;,&quot;#00fffe&quot;,&quot;#0040ff&quot;,&quot;#0000ff&quot;,&quot;#6000ff&quot;,&quot;#fe00ff&quot;,&quot;#ff0040&quot;,&quot;#acb3f3&quot;,&quot;#e0acfe&quot;,&quot;#a300ff&quot;,&quot;#ea00ff&quot;,&quot;#ff00e3&quot;,&quot;#fdd3f8&quot;,&quot;#f1d07e&quot;,&quot;#a8b5f5&quot;,&quot;#C3C6D8&quot;, &quot;#f3f2da&quot;,&quot;#727474&quot;, &quot;#000000&quot;]'" line16="    //% value.fieldOptions.columns=5 value.fieldOptions.className='rgbColorPicker'  " line17="    export function CalliColorNumberPicker(value: number) {" line18="        return value;" line19="    }" line20="" line21="    /**" line22="    * Konvertiert den Farbnamen in eine Zahl" line23="    */" line24="    //% blockId=CalliColor block=&quot;%c=CalliColorNumberPicker&quot;" line25="    //% group=&quot;LED Strip&quot; weight=83" line26="    //% c.defl=0xff0000" line27="    //% inlineInputMode=external" line28="    export function CalliColor(c: number): number {" line29="        return c;" line30="    }" line31="" line32="    /**" line33="      * Converts red, green, blue channels into a RGB color" line34="      * @param red value of the red channel between 0 and 255. eg: 255" line35="      * @param green value of the green channel between 0 and 255. eg: 255" line36="      * @param blue value of the blue channel between 0 and 255. eg: 255" line37="      */" line38="    //% weight=3" line39="    //% blockId=&quot;rgb&quot; block=&quot;red %red|green %green|blue %blue&quot;" line40="    //% block.loc.de=&quot;rot %red|grün %green|blau %blue&quot;" line41="    //% group=&quot;LED Strip&quot; weight=82" line42="    export function rgb(red: number, green: number, blue: number): number {" line43="        return ((red &amp; 0xFF) &lt;&lt; 16) | ((green &amp; 0xFF) &lt;&lt; 8) | (blue &amp; 0xFF);" line44="    }" line45="" line46="}" numlines="47"></mutation><next><block type="typescript_statement" id="EoHzSn_.1l6P~27`fuKj"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace servers {" line1="    function start() {" line2="        jacdac.productIdentifier = 0x32690c10" line3="        jacdac.deviceDescription = &quot;Calliope Neopixelstrip C8&quot;" line4="        jacdac.startSelfServers(() =&gt; {" line5="            const pin = DigitalPin.C8" line6="            pins.setPull(pin, PinPullMode.PullNone)" line7="            const sendPixels = (pixels: Buffer, brightness: number) =&gt; light.sendWS2812BufferWithBrightness(pixels, pin, brightness)" line8="            const servers = [" line9="                new jacdac.LedServer(" line10="                    150," line11="                    jacdac.LedPixelLayout.RgbGrb," line12="                    sendPixels, {" line13="                    variant: jacdac.LedVariant.Strip" line14="                })" line15="            ]" line16="            return servers" line17="        })" line18="    }" line19="    start()" line20="}" numlines="21"></mutation></block></next></block></statement></block></xml>